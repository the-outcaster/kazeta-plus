#! /bin/bash

# Save the PID of this script, which represents the game session
#echo $$ > /tmp/kazeta_game.pid

set -x

# Check for the --bios flag
if [ "$1" == "--bios" ]; then
    # If the flag is present, launch the BIOS immediately and exit,
    # ignoring any inserted SD cards.
    gamescope --filter pixel -- kazeta-bios
    exit 0
fi

BASE_DIR="$HOME/.local/share/kazeta"
if [[ ! -d "${BASE_DIR}" ]]; then
	mkdir -p "${BASE_DIR}"
fi

BASE_EXT="/media"
result=$(ls -1 /media | wc -l)
if [[ "$result" == "0" ]]; then
	BASE_EXT="/run/media/${USER}"
	if [[ ! -d "${BASE_EXT}" ]]; then
		BASE_EXT="/run/media"
	fi
fi

function get_attribute {
	attribute=$1
	shift
	info_file="$@"
	cat "${info_file}" | grep "^${attribute}=" | head -1 | cut -d= -f2-
}

function start_playtime_capture {
	while true; do
		sleep 60
		date --iso-8601=seconds > .kazeta/var/playtime_end
	done
}

<<COMMENT
# wait up to 2 seconds for a cart
for i in $(seq 1 20); do
	cart_info=$(find ${BASE_EXT} -maxdepth 2 -name "*.kzi" | head -1)
	if [[ -f "${cart_info}" ]]; then
		break
	else
		sleep 0.1
	fi
done
COMMENT

# Check if a specific .kzi file was passed as an argument
if [ -n "$1" ] && [ -f "$1" ]; then
    cart_info="$1"
else
    # If not, wait up to 2 seconds for any cart (original behavior)
    for i in $(seq 1 20); do
        cart_info=$(find ${BASE_EXT} -maxdepth 2 -name "*.kzi" | head -1)
        if [[ -f "${cart_info}" ]]; then
            break
        else
            sleep 0.1
        fi
    done
fi

if [[ ! -f "${cart_info}" ]]; then
	# no cart found, start bios/memory management app
	gamescope --filter pixel -- kazeta-bios
	exit 0
fi

cart_path=$(dirname "${cart_info}")
cart_id="$(get_attribute 'Id' ${cart_info})"
cart_icon="${cart_path}/$(get_attribute 'Icon' ${cart_info})"

mkdir -p "${BASE_DIR}/cache/${cart_id}"
cp "${cart_info}" "${BASE_DIR}/cache/${cart_id}/metadata.kzi"
if [[ -f "${cart_icon}" ]]; then
	cp "${cart_icon}" "${BASE_DIR}/cache/${cart_id}/icon.png"
fi

lower="${cart_path}"
upper="${BASE_DIR}/saves/default/${cart_id}"
work="${BASE_DIR}/run/work"
target="${BASE_DIR}/run/cart"

if [[ ! -d "${upper}" ]]; then
	rm -f "${upper}"
	mkdir -p "${upper}"
fi

runtime_name="$(get_attribute 'Runtime' ${cart_info})"
if [ -n "$runtime_name" ]; then
	runtime="${cart_path}/${runtime_name}"
	if [ ! -f "$runtime" ]; then
		runtime="${cart_path}/${runtime_name}.kzr"
		if [ ! -f "$runtime" ]; then
			runtime="$(ls ${cart_path}/${runtime_name}-*.kzr)"
			if [ ! -f "$runtime" ]; then
				runtime="/usr/share/kazeta/runtimes/none.kzr"
			fi
		fi
	fi
else
	runtime="/usr/share/kazeta/runtimes/none.kzr"
fi

# saving this in case I need it for later:
# 	rm -f /tmp/kazeta_game.pid; \
#	rm -rf "${upper}/.kazeta/share"; \
#	rmdir --ignore-fail-on-non-empty "${upper}/.kazeta"; \
runtimedir="${BASE_DIR}/run/runtime"
sudo kazeta-mount "${lower}" "${upper}" "${work}" "${target}" "${runtime}" "${runtimedir}"
trap "\
	popd; \
	sudo kazeta-mount --unmount "${target}" "${runtimedir}"; \
	rm -rf "${work}"; \
	rm -rf "${upper}/.kazeta/share"; \
	rmdir --ignore-fail-on-non-empty "${upper}/.kazeta"; \
" EXIT

export HOME="${BASE_DIR}/run/cart"

unset XDG_CONFIG_HOME
unset XDG_CACHE_HOME
unset XDG_DATA_HOME
unset XDG_STATE_HOME
pushd "${HOME}"

cart_exec="$(get_attribute 'Exec' ${cart_info})"
cart_gsopts="$(get_attribute 'GamescopeOptions' ${cart_info})"
echo "$cart_exec" > /tmp/kazeta-cart-exec

# append previously captured playtime to the log
if [ -f .kazeta/var/playtime_start ] && [ -f .kazeta/var/playtime_end ]; then
	echo "$(cat .kazeta/var/playtime_start) $(cat .kazeta/var/playtime_end)" >> .kazeta/var/playtime.log
fi
rm -f .kazeta/var/playtime_start
rm -f .kazeta/var/playtime_end

mkdir -p .kazeta/var
date --iso-8601=seconds > .kazeta/var/playtime_start
start_playtime_capture &
gamescope ${cart_gsopts} -- ./.kazeta/share/run /tmp/kazeta-cart-exec | grep -v "pressure-vessel-wrap" > "${HOME}/.kazeta/var/run.log" 2>&1
